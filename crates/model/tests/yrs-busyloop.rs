use yrs::{updates::decoder::Decode, Doc, GetString, ReadTxn, Transact, Update};

#[test]
#[ignore]
fn yrs_busyloop() {
    let update = vec![
        1, 111, 199, 236, 152, 171, 7, 0, 4, 1, 0, 4, 240, 159, 159, 162, 132, 199, 236, 152, 171,
        7, 1, 0, 132, 199, 236, 152, 171, 7, 1, 0, 132, 199, 236, 152, 171, 7, 1, 0, 196, 199, 236,
        152, 171, 7, 1, 199, 236, 152, 171, 7, 2, 1, 32, 196, 199, 236, 152, 171, 7, 1, 199, 236,
        152, 171, 7, 2, 1, 73, 196, 199, 236, 152, 171, 7, 1, 199, 236, 152, 171, 7, 2, 1, 32, 196,
        199, 236, 152, 171, 7, 1, 199, 236, 152, 171, 7, 4, 1, 116, 196, 199, 236, 152, 171, 7, 5,
        199, 236, 152, 171, 7, 4, 1, 104, 196, 199, 236, 152, 171, 7, 6, 199, 236, 152, 171, 7, 4,
        1, 105, 196, 199, 236, 152, 171, 7, 7, 199, 236, 152, 171, 7, 4, 1, 110, 196, 199, 236,
        152, 171, 7, 8, 199, 236, 152, 171, 7, 4, 1, 107, 196, 199, 236, 152, 171, 7, 9, 199, 236,
        152, 171, 7, 4, 1, 32, 196, 199, 236, 152, 171, 7, 10, 199, 236, 152, 171, 7, 4, 1, 105,
        196, 199, 236, 152, 171, 7, 11, 199, 236, 152, 171, 7, 4, 1, 102, 196, 199, 236, 152, 171,
        7, 12, 199, 236, 152, 171, 7, 4, 1, 32, 196, 199, 236, 152, 171, 7, 13, 199, 236, 152, 171,
        7, 4, 1, 98, 196, 199, 236, 152, 171, 7, 14, 199, 236, 152, 171, 7, 4, 1, 121, 196, 199,
        236, 152, 171, 7, 15, 199, 236, 152, 171, 7, 4, 1, 32, 196, 199, 236, 152, 171, 7, 16, 199,
        236, 152, 171, 7, 4, 1, 100, 196, 199, 236, 152, 171, 7, 17, 199, 236, 152, 171, 7, 4, 1,
        101, 196, 199, 236, 152, 171, 7, 18, 199, 236, 152, 171, 7, 4, 1, 102, 196, 199, 236, 152,
        171, 7, 19, 199, 236, 152, 171, 7, 4, 1, 97, 196, 199, 236, 152, 171, 7, 20, 199, 236, 152,
        171, 7, 4, 1, 117, 196, 199, 236, 152, 171, 7, 21, 199, 236, 152, 171, 7, 4, 1, 108, 196,
        199, 236, 152, 171, 7, 22, 199, 236, 152, 171, 7, 4, 1, 116, 196, 199, 236, 152, 171, 7,
        23, 199, 236, 152, 171, 7, 4, 1, 32, 196, 199, 236, 152, 171, 7, 24, 199, 236, 152, 171, 7,
        4, 1, 115, 196, 199, 236, 152, 171, 7, 25, 199, 236, 152, 171, 7, 4, 1, 116, 196, 199, 236,
        152, 171, 7, 26, 199, 236, 152, 171, 7, 4, 1, 105, 196, 199, 236, 152, 171, 7, 27, 199,
        236, 152, 171, 7, 4, 1, 99, 196, 199, 236, 152, 171, 7, 28, 199, 236, 152, 171, 7, 4, 1,
        107, 196, 199, 236, 152, 171, 7, 29, 199, 236, 152, 171, 7, 4, 1, 121, 196, 199, 236, 152,
        171, 7, 30, 199, 236, 152, 171, 7, 4, 1, 32, 196, 199, 236, 152, 171, 7, 31, 199, 236, 152,
        171, 7, 4, 1, 115, 196, 199, 236, 152, 171, 7, 32, 199, 236, 152, 171, 7, 4, 1, 105, 196,
        199, 236, 152, 171, 7, 33, 199, 236, 152, 171, 7, 4, 1, 100, 196, 199, 236, 152, 171, 7,
        34, 199, 236, 152, 171, 7, 4, 1, 101, 196, 199, 236, 152, 171, 7, 35, 199, 236, 152, 171,
        7, 4, 1, 99, 196, 199, 236, 152, 171, 7, 36, 199, 236, 152, 171, 7, 4, 1, 97, 196, 199,
        236, 152, 171, 7, 37, 199, 236, 152, 171, 7, 4, 1, 114, 196, 199, 236, 152, 171, 7, 38,
        199, 236, 152, 171, 7, 4, 1, 115, 196, 199, 236, 152, 171, 7, 39, 199, 236, 152, 171, 7, 4,
        1, 32, 196, 199, 236, 152, 171, 7, 40, 199, 236, 152, 171, 7, 4, 1, 97, 196, 199, 236, 152,
        171, 7, 41, 199, 236, 152, 171, 7, 4, 1, 114, 196, 199, 236, 152, 171, 7, 42, 199, 236,
        152, 171, 7, 4, 1, 101, 196, 199, 236, 152, 171, 7, 43, 199, 236, 152, 171, 7, 4, 1, 32,
        196, 199, 236, 152, 171, 7, 44, 199, 236, 152, 171, 7, 4, 1, 99, 196, 199, 236, 152, 171,
        7, 45, 199, 236, 152, 171, 7, 4, 1, 108, 196, 199, 236, 152, 171, 7, 46, 199, 236, 152,
        171, 7, 4, 1, 111, 196, 199, 236, 152, 171, 7, 47, 199, 236, 152, 171, 7, 4, 1, 115, 196,
        199, 236, 152, 171, 7, 48, 199, 236, 152, 171, 7, 4, 1, 101, 196, 199, 236, 152, 171, 7,
        49, 199, 236, 152, 171, 7, 4, 1, 100, 196, 199, 236, 152, 171, 7, 50, 199, 236, 152, 171,
        7, 4, 1, 44, 196, 199, 236, 152, 171, 7, 51, 199, 236, 152, 171, 7, 4, 1, 32, 196, 199,
        236, 152, 171, 7, 52, 199, 236, 152, 171, 7, 4, 1, 105, 196, 199, 236, 152, 171, 7, 53,
        199, 236, 152, 171, 7, 4, 1, 116, 196, 199, 236, 152, 171, 7, 54, 199, 236, 152, 171, 7, 4,
        1, 39, 196, 199, 236, 152, 171, 7, 55, 199, 236, 152, 171, 7, 4, 1, 100, 196, 199, 236,
        152, 171, 7, 56, 199, 236, 152, 171, 7, 4, 1, 32, 196, 199, 236, 152, 171, 7, 57, 199, 236,
        152, 171, 7, 4, 1, 102, 196, 199, 236, 152, 171, 7, 58, 199, 236, 152, 171, 7, 4, 1, 101,
        196, 199, 236, 152, 171, 7, 59, 199, 236, 152, 171, 7, 4, 1, 101, 196, 199, 236, 152, 171,
        7, 60, 199, 236, 152, 171, 7, 4, 1, 108, 196, 199, 236, 152, 171, 7, 61, 199, 236, 152,
        171, 7, 4, 1, 32, 196, 199, 236, 152, 171, 7, 62, 199, 236, 152, 171, 7, 4, 1, 97, 196,
        199, 236, 152, 171, 7, 63, 199, 236, 152, 171, 7, 4, 1, 32, 196, 199, 236, 152, 171, 7, 64,
        199, 236, 152, 171, 7, 4, 1, 108, 196, 199, 236, 152, 171, 7, 65, 199, 236, 152, 171, 7, 4,
        1, 111, 196, 199, 236, 152, 171, 7, 66, 199, 236, 152, 171, 7, 4, 1, 116, 196, 199, 236,
        152, 171, 7, 67, 199, 236, 152, 171, 7, 4, 1, 32, 196, 199, 236, 152, 171, 7, 68, 199, 236,
        152, 171, 7, 4, 1, 98, 196, 199, 236, 152, 171, 7, 69, 199, 236, 152, 171, 7, 4, 1, 101,
        196, 199, 236, 152, 171, 7, 70, 199, 236, 152, 171, 7, 4, 1, 116, 196, 199, 236, 152, 171,
        7, 71, 199, 236, 152, 171, 7, 4, 1, 116, 196, 199, 236, 152, 171, 7, 72, 199, 236, 152,
        171, 7, 4, 1, 101, 196, 199, 236, 152, 171, 7, 73, 199, 236, 152, 171, 7, 4, 1, 114, 196,
        199, 236, 152, 171, 7, 74, 199, 236, 152, 171, 7, 4, 1, 32, 196, 199, 236, 152, 171, 7, 75,
        199, 236, 152, 171, 7, 4, 1, 97, 196, 199, 236, 152, 171, 7, 76, 199, 236, 152, 171, 7, 4,
        1, 115, 196, 199, 236, 152, 171, 7, 77, 199, 236, 152, 171, 7, 4, 1, 32, 196, 199, 236,
        152, 171, 7, 78, 199, 236, 152, 171, 7, 4, 1, 119, 196, 199, 236, 152, 171, 7, 79, 199,
        236, 152, 171, 7, 4, 1, 101, 196, 199, 236, 152, 171, 7, 80, 199, 236, 152, 171, 7, 4, 1,
        108, 196, 199, 236, 152, 171, 7, 81, 199, 236, 152, 171, 7, 4, 1, 108, 196, 199, 236, 152,
        171, 7, 82, 199, 236, 152, 171, 7, 4, 1, 32, 196, 199, 236, 152, 171, 7, 83, 199, 236, 152,
        171, 7, 4, 1, 45, 196, 199, 236, 152, 171, 7, 84, 199, 236, 152, 171, 7, 4, 1, 32, 196,
        199, 236, 152, 171, 7, 85, 199, 236, 152, 171, 7, 4, 1, 105, 196, 199, 236, 152, 171, 7,
        86, 199, 236, 152, 171, 7, 4, 1, 102, 196, 199, 236, 152, 171, 7, 87, 199, 236, 152, 171,
        7, 4, 1, 32, 196, 199, 236, 152, 171, 7, 88, 199, 236, 152, 171, 7, 4, 1, 119, 196, 199,
        236, 152, 171, 7, 89, 199, 236, 152, 171, 7, 4, 1, 101, 196, 199, 236, 152, 171, 7, 90,
        199, 236, 152, 171, 7, 4, 1, 32, 196, 199, 236, 152, 171, 7, 91, 199, 236, 152, 171, 7, 4,
        1, 119, 196, 199, 236, 152, 171, 7, 92, 199, 236, 152, 171, 7, 4, 1, 97, 196, 199, 236,
        152, 171, 7, 93, 199, 236, 152, 171, 7, 4, 1, 110, 196, 199, 236, 152, 171, 7, 94, 199,
        236, 152, 171, 7, 4, 1, 116, 196, 199, 236, 152, 171, 7, 95, 199, 236, 152, 171, 7, 4, 1,
        32, 196, 199, 236, 152, 171, 7, 96, 199, 236, 152, 171, 7, 4, 1, 116, 196, 199, 236, 152,
        171, 7, 97, 199, 236, 152, 171, 7, 4, 1, 111, 196, 199, 236, 152, 171, 7, 98, 199, 236,
        152, 171, 7, 4, 1, 32, 196, 199, 236, 152, 171, 7, 99, 199, 236, 152, 171, 7, 4, 1, 107,
        196, 199, 236, 152, 171, 7, 100, 199, 236, 152, 171, 7, 4, 1, 101, 196, 199, 236, 152, 171,
        7, 101, 199, 236, 152, 171, 7, 4, 1, 101, 196, 199, 236, 152, 171, 7, 102, 199, 236, 152,
        171, 7, 4, 1, 112, 196, 199, 236, 152, 171, 7, 103, 199, 236, 152, 171, 7, 4, 1, 32, 196,
        199, 236, 152, 171, 7, 104, 199, 236, 152, 171, 7, 4, 1, 116, 196, 199, 236, 152, 171, 7,
        105, 199, 236, 152, 171, 7, 4, 1, 104, 196, 199, 236, 152, 171, 7, 106, 199, 236, 152, 171,
        7, 4, 1, 101, 196, 199, 236, 152, 171, 7, 107, 199, 236, 152, 171, 7, 4, 1, 109, 0,
    ];

    let doc = Doc::new();
    let mut txn = doc.transact_mut();

    let update = Update::decode_v1(&update).unwrap();
    println!("update: {update}");

    txn.apply_update(update);
    txn.get_text("").unwrap();
    drop(txn);

    let trx2 = doc.transact();
    let txt = trx2.get_text("").unwrap();

    // Busyloop or segfault inside to_string
    txt.get_string(&trx2);
}
